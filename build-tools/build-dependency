#!/usr/bin/env bash

set -o errexit

declare -r _valid_dependencies=(absl
                                awssdk
                                dlpack
                                fmt
                                gtest
                                natsort
                                protobuf
                                pybind11
                                tbb)

function _print_usage
{
    local dep

    printf "Usage: %s DIRECTORY [all|DEPENDENCY...]\n\nDependencies:\n" "$(basename "$0")"

    for dep in "${_valid_dependencies[@]}"; do
        printf "  %s\n" "$dep"
    done
}

function _exit
{
    _print_usage

    exit 0
}

function _exit_error
{
    _print_usage >&2

    exit 1
}

function _check_dependency
{
    local dep

    for dep in "${_valid_dependencies[@]}"; do
        if [[ $1 == "$dep" ]]; then
            return
        fi
    done

    printf "%s is not a valid dependency name.\n\n" "$1" >&2

    _exit_error
}

function _check_dependencies
{
    local dep

    for dep; do
        _check_dependency "$dep"
    done
}

function _build_dependencies
{
    local dep

    cmake -GNinja -S "$(cd "$(dirname "$0")" && pwd)/../third-party" -B "$_target_dir"

    for dep; do
        cmake --build "$_target_dir" --target "$dep"
    done
}

function _main
{
    local deps

    if [[ $# -eq 0 ]]; then
        _exit_error
    fi

    if [[ $# -eq 1 ]]; then
        if [[ $1 == -h || $1 == --help ]]; then
            _exit
        else
            _exit_error
        fi
    fi

    _target_dir=$1

    shift

    if [[ $# -eq 1 && $1 == all ]]; then
        deps=("${_valid_dependencies[@]}")
    else
        deps=("$@")
    fi

    _check_dependencies "${deps[@]}"
    _build_dependencies "${deps[@]}"
}

_main "$@"
